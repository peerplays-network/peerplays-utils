

variables:
  TAG: latest
  UBUNTU_IMAGE_NAME: "$CI_REGISTRY_IMAGE/ubuntu-for-peerplays:$TAG"
  BITCOIN_IMAGE_NAME: "$CI_REGISTRY_IMAGE/bitcoin-for-peerplays:$TAG"
  PEERPLAYS_IMAGE_NAME: "$CI_REGISTRY_IMAGE/peerplays-base:$TAG"
  FAUCET_IMAGE_NAME: "$CI_REGISTRY_IMAGE/faucet-for-peerplays:$TAG"
  HIVE_IMAGE_NAME: "$CI_REGISTRY_IMAGE/hive-for-peerplays:$TAG"

stages:
  - build

build_ubuntu:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f peerplays-qa-environment/ubuntu/Dockerfile -t $UBUNTU_IMAGE_NAME .
    - docker push $UBUNTU_IMAGE_NAME
  when: manual
  tags:
    - docker

build_faucet:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f peerplays-qa-environment/faucet/Dockerfile -t $FAUCET_IMAGE_NAME .
    - docker push $FAUCET_IMAGE_NAME
  when: manual
  tags:
    - docker

build_bitcoin:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f peerplays-qa-environment/bitcoin/Dockerfile -t $BITCOIN_IMAGE_NAME .
    - docker push $BITCOIN_IMAGE_NAME
  when: manual
  tags:
    - docker

build_hive:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f peerplays-qa-environment/hive/Dockerfile.v1.25.0 -t $HIVE_IMAGE_NAME .
    - docker push $HIVE_IMAGE_NAME
  when: manual
  tags:
    - docker-build-qa


build_peerplays:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f peerplays-qa-environment/peerplays/Dockerfile -t $PEERPLAYS_IMAGE_NAME .
    - docker push $PEERPLAYS_IMAGE_NAME
  when: manual
  tags:
    - docker-build-qa

