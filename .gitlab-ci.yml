
include:
  - template: Container-Scanning.gitlab-ci.yml

variables:
  TAG: latest
  UBUNTU_IMAGE_NAME: "$CI_REGISTRY_IMAGE/ubuntu-for-peerplays:$TAG"
  BITCOIN_IMAGE_NAME: "$CI_REGISTRY_IMAGE/bitcoin-for-peerplays:$TAG"

stages:
  - build
  - test

# peerplays-qa-trigger:
#   stage: triggers
#   trigger:
#     include: peerplays-qa-environment/.gitlab-ci.yml
#   strategy: depend
#   # rules:
#   #   - changes:
#   #       - peerplays-qa-environment/*


build_faucet:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build -f peerplays-qa-environment/faucet/Dockerfile -t "$CI_REGISTRY_IMAGE/faucet-for-peerplays:latest" .
    - docker push "$CI_REGISTRY_IMAGE/faucet-for-peerplays:latest"
  # Run this job in a branch where a Dockerfile exists
  when: manual
  tags:
    - docker

build_bitcoin:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build -f peerplays-qa-environment/bitcoin/Dockerfile -t $BITCOIN_IMAGE_NAME .
    - docker push $BITCOIN_IMAGE_NAME
  # Run this job in a branch where a Dockerfile exists
  when: manual
  tags:
    - docker

build_hive:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build -f peerplays-qa-environment/hive/Dockerfile.v1.25.0 -t "$CI_REGISTRY_IMAGE/hive-for-peerplays:$TAG" .
    - docker push "$CI_REGISTRY_IMAGE/hive-for-peerplays:$TAG"
  # Run this job in a branch where a Dockerfile exists
  when: manual
  tags:
    - docker-build-qa


build_peerplays:
  stage: build
  image: docker:latest
  services:
    - docker:19.03.12-dind
  before_script:
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build -f peerplays-qa-environment/peerplays/Dockerfile -t "$CI_REGISTRY_IMAGE/peerplays-base:$TAG" .
    - docker push "$CI_REGISTRY_IMAGE/peerplays-base:$TAG"
  # Run this job in a branch where a Dockerfile exists
  when: manual
  tags:
    - docker-build-qa

container_scanning:
  variables:
    DOCKER_IMAGE: $UBUNTU_IMAGE_NAME

container_scanning_bitcoin:
  extends: .container_scanning
  variables:
    DOCKER_IMAGE: $BITCOIN_IMAGE_NAME

# container_scanning_bitcoin:
#   extends: .container_scanning
#   variables:
#     DOCKER_IMAGE: $BITCOIN_IMAGE_NAME

